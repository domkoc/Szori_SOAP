//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeatReservation
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CinemaException", Namespace="http://www.iit.bme.hu/soi/hw/SeatReservation")]
    public partial class CinemaException : object
    {
        
        private int ErrorCodeField;
        
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://www.iit.bme.hu/soi/hw/SeatReservation")]
    public partial class Seat : object
    {
        
        private string RowField;
        
        private string ColumnField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Row
        {
            get
            {
                return this.RowField;
            }
            set
            {
                this.RowField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string Column
        {
            get
            {
                return this.ColumnField;
            }
            set
            {
                this.ColumnField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeatStatus", Namespace="http://www.iit.bme.hu/soi/hw/SeatReservation")]
    public enum SeatStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Free = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Locked = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reserved = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sold = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.iit.bme.hu/soi/hw/SeatReservation", ConfigurationName="SeatReservation.ICinema")]
    public interface ICinema
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Init", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Init", Name="CinemaException")]
        System.Threading.Tasks.Task InitAsync(int rows, int columns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/GetAllSeats", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/GetAllSeats", Name="CinemaException")]
        System.Threading.Tasks.Task<SeatReservation.Seat[]> GetAllSeatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/GetSeatStatus", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/GetSeatStatus", Name="CinemaException")]
        System.Threading.Tasks.Task<SeatReservation.SeatStatus> GetSeatStatusAsync(SeatReservation.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Lock", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Lock", Name="CinemaException")]
        System.Threading.Tasks.Task<string> LockAsync(SeatReservation.Seat seat, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Unlock", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Unlock", Name="CinemaException")]
        System.Threading.Tasks.Task UnlockAsync(string lockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Reserve", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Reserve", Name="CinemaException")]
        System.Threading.Tasks.Task ReserveAsync(string lockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Buy", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(SeatReservation.CinemaException), Action="http://www.iit.bme.hu/soi/hw/SeatReservation/ICinema/Buy", Name="CinemaException")]
        System.Threading.Tasks.Task BuyAsync(string lockId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface ICinemaChannel : SeatReservation.ICinema, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class CinemaClient : System.ServiceModel.ClientBase<SeatReservation.ICinema>, SeatReservation.ICinema
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CinemaClient() : 
                base(CinemaClient.GetDefaultBinding(), CinemaClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ICinema_HttpSoap11_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CinemaClient(EndpointConfiguration endpointConfiguration) : 
                base(CinemaClient.GetBindingForEndpoint(endpointConfiguration), CinemaClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CinemaClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CinemaClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CinemaClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CinemaClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CinemaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task InitAsync(int rows, int columns)
        {
            return base.Channel.InitAsync(rows, columns);
        }
        
        public System.Threading.Tasks.Task<SeatReservation.Seat[]> GetAllSeatsAsync()
        {
            return base.Channel.GetAllSeatsAsync();
        }
        
        public System.Threading.Tasks.Task<SeatReservation.SeatStatus> GetSeatStatusAsync(SeatReservation.Seat seat)
        {
            return base.Channel.GetSeatStatusAsync(seat);
        }
        
        public System.Threading.Tasks.Task<string> LockAsync(SeatReservation.Seat seat, int count)
        {
            return base.Channel.LockAsync(seat, count);
        }
        
        public System.Threading.Tasks.Task UnlockAsync(string lockId)
        {
            return base.Channel.UnlockAsync(lockId);
        }
        
        public System.Threading.Tasks.Task ReserveAsync(string lockId)
        {
            return base.Channel.ReserveAsync(lockId);
        }
        
        public System.Threading.Tasks.Task BuyAsync(string lockId)
        {
            return base.Channel.BuyAsync(lockId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ICinema_HttpSoap11_Port))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ICinema_HttpSoap11_Port))
            {
                return new System.ServiceModel.EndpointAddress("http://www.tempuri.org/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CinemaClient.GetBindingForEndpoint(EndpointConfiguration.ICinema_HttpSoap11_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CinemaClient.GetEndpointAddress(EndpointConfiguration.ICinema_HttpSoap11_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            ICinema_HttpSoap11_Port,
        }
    }
}
